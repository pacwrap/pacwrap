#!/bin/bash
#
#  Pachwrap -- sandbox invocator
# 
#  Copyright (C) 2023 Xavier R.M. 
#  sapphirus(at)azorium(dot)net
#
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, with only version 3 of the License.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.

BOLD=$(tput bold)
RED=$(tput setaf 1)
RESET=$(tput sgr0)
EXEC_NAME="pacwrap-exec"

main () {
	
	parse_args "$@"

	if [[ $SWITCH == *v* ]]; then
		VER_DISPLAY=$EXEC_NAME pachwrap -v
		exit
	fi

	if [[ $SANDBOX == "" ]]; then
		echo $EXEC_NAME": Target not specified."
		echo "Try 'chpak -h' for more information on valid operational parameters."
		exit 1
	fi

	init_vars

	if [[ ! -d $INSTANCE_ROOT ]] || [[ ! -d $INSTANCE_HOME ]] || [[ ! -d $SANDBOX_BASE ]]; then
		echo "$EXEC_NAME $BOLD${RED}ERROR$RESET: Sandbox $SANDBOX not found."
		echo "Try 'chpak -h' for more information on valid operational parameters."	
		exit 1
	fi

	local sandbox=$SANDBOX
	if [[ $SWITCH == *r* ]] || [[ $SWITCH == *ep* ]]; then
		sandbox=fakeroot
		
	fi

	SANDBOX_SCRIPT="$XDG_DATA_HOME/sbscripts/$sandbox.sh"


	if [[ ! -f $SANDBOX_SCRIPT ]]; then
		echo "$EXEC_NAME: Script $SANDBOX_SCRIPT not found."
		echo "Try 'chpak -h' for more information on valid operational parameters."
		exit 1
	fi
	
	case $SWITCH in 
		*rc*|*cr*) 
			execute_sandbox fakechroot fakeroot "${ARGS[@]}"	
			;;		
		*rs*|*sr*)	
			execute_sandbox fakechroot fakeroot bash
			;;
		s)
			execute_sandbox bash			
			;;
		*)
			execute_sandbox "${ARGS[@]}"	
			;;
	esac
}

init_vars () {
	INSTANCE_USER=user
	INSTANCE_ROOT=$SANDBOX_BASE/fs/root/$SANDBOX
	INSTANCE_HOME=$SANDBOX_BASE/fs/home/$SANDBOX
	INSTANCE_HOME_MOUNT=/home/$INSTANCE_USER

	if [[ $SWITCH == *d* ]]; then
		INSTANCE_ROOT=$SANDBOX_BASE/fs.dep/root/$SANDBOX
		INSTANCE_HOME=$SANDBOX_BASE/fs.dep/home/$SANDBOX
	
	fi	
}


parse_args () {
	ARGS=()
	local sbdefined=

	for var in "$@"; do
		case $var in 
			--root)
				SWITCH=r$SWITCH
				;;
			--shell)
				SWITCH=s$SWITCH
				;;
			--dep)
				SWITCH=d$SWITCH
				;;	
			--exec)
				SWITCH=rc$SWITCH
				;;
			-E*)
				SWITCH=$(echo $var | cut -c 3-)$SWITCH				
				;;
			*)
				if [[ ! $sbdefined ]]; then 
					SANDBOX=$var
					sbdefined=1
					continue
				fi
				ARGS+=("$var")
				;;
		esac
	done
}

execute_sandbox () {
	source $SANDBOX_SCRIPT
}

main $@
