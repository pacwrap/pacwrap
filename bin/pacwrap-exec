#!/bin/bash
#
#  PacWrap -- Chroot Invocator
# 
#  Copyright (C) 2023 Xavier R.M. 
#  sapphirus(at)azorium(dot)net
#
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, with only version 3 of the License.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.

source pacwrap-common

EXEC_NAME="pacwrap-exec"

main () {
	export PACWRAP_EXEC=1
	parse_args "$@"
	init 1

	[[ ! $INSTANCE ]] &&
		log_error $LOG_ERR_HELP "Target not specified." 1
	

	[[ ! -d $INSTANCE_ROOT ]] || [[ ! -d $INSTANCE_HOME ]] &&
		log_error $LOG_ERR_HELP "Container $INSTANCE not found." 1
	

	case $SWITCH in 
		*rc*|*cr*) 
			execute_fakeroot "${ARGS[@]}"	
			;;		
		*rs*|*sr*)	
			execute_fakeroot bash
			;;
		s)
			execute_sandbox bash			
			;;
		*)
			execute_sandbox "${ARGS[@]}"	
			;;
	esac
}

script_init () {
	INSTANCE_ROOT=$INSTANCE_ROOT_DIR/$INSTANCE
	INSTANCE_HOME=$INSTANCE_HOME_DIR/$INSTANCE
	INSTANCE_USER=user
	INSTANCE_HOME_MOUNT=/home/$INSTANCE_USER
	INSTANCE_SCRIPT="$PACWRAP_CONFIG_DIR/bwrap/$INSTANCE.sh"
}


parse_args () {
	ARGS=()
	local sbdefined=

	for var in "$@"; do
		case $var in 
			--root)
				SWITCH=r$SWITCH
				;;
			--shell)
				SWITCH=s$SWITCH
				;;
			--dep)
				SWITCH=d$SWITCH
				;;	
			--exec)
				SWITCH=rc$SWITCH
				;;
			-E*)
				SWITCH=$(echo $var | cut -c 3-)$SWITCH				
				;;
			*)
				if [[ ! $sbdefined ]]; then 
					INSTANCE=$var
					sbdefined=1
					continue
				fi
				ARGS+=("$var")
				;;
		esac
	done
}

execute_sandbox () {
	if [[ ! -f $INSTANCE_SCRIPT ]]; then
		echo "$EXEC_NAME $BOLD${RED}ERROR$RESET: Script $INSTANCE_SCRIPT not found."
		echo "Try 'pacwrap -h' for more information on valid operational parameters."
		exit 1
	fi

	runtime_config ${ARGS[@]}
	source $INSTANCE_SCRIPT
}


runtime_config() {
	trap on_exit EXIT
	
	[[ ! -d $INSTANCE_RUNTIME_DIR ]] && mkdir $INSTANCE_RUNTIME_DIR
	
	local config=$(cat << _CONFIG
##\n## Runtime session \n## generated on $(date "+%F %T") by $EXEC_NAME.
\n##\n
\ninstance=$INSTANCE
\nstart=$(date +%s)
\nruntime_args="$@"
_CONFIG
)
	echo -e $config > $INSTANCE_RUNTIME_DIR/$$
}

execute_fakeroot() {
	runtime_config "$@"
	(exec bwrap \
	--bind $INSTANCE_ROOT / \
	--ro-bind /usr/lib/libfakeroot /usr/lib/libfakeroot/ \
	--ro-bind /usr/bin/fakeroot /usr/bin/fakeroot \
	--ro-bind /usr/bin/fakechroot /usr/bin/fakechroot \
	--ro-bind /usr/bin/faked /usr/bin/faked \
	--ro-bind /etc/resolv.conf /etc/resolv.conf \
	--ro-bind /etc/localtime /etc/localtime \
	--bind $INSTANCE_PACMAN_SYNC /var/lib/pacman/sync \
	--bind $INSTANCE_PACMAN_GNUPG /etc/pacman.d/gnupg \
	--bind $INSTANCE_PACMAN_CACHE /var/cache/pacman/pkg \
	--dev /dev \
	--proc /proc \
	--tmpfs /tmp \
	--ro-bind $(return_pacman_syncdb) /tmp/pacman.conf \
	--ro-bind $(return_pacman_sync) /etc/pacman.conf \
	--ro-bind $INSTANCE_PACMAN_MIRRORLIST /etc/pacman.d/mirrorlist \
	--bind $LOG_FILE /tmp/pacman.log \
	--bind $INSTANCE_HOME $INSTANCE_HOME_MOUNT \
	--unshare-all \
	--share-net \
	--clearenv \
	--hostname "FakeChroot" \
	--setenv CWD $INSTANCE_HOME_MOUNT \
	--setenv HOME $INSTANCE_HOME_MOUNT \
	--setenv USER $INSTANCE_USER \
	--setenv PATH /usr/bin \
	--setenv TERM xterm \
	--setenv FREETYPE_PROPERTIES $FREETYPE_PROPERTIES \
	--new-session \
	--die-with-parent \
	fakechroot fakeroot "$@")
}

on_exit() {
	[[ -f $XDG_RUNTIME_DIR/.pacwrap/$$ ]] && rm $XDG_RUNTIME_DIR/.pacwrap/$$
}

main $@
