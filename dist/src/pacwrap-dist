#!/usr/bin/bash
#
# pacwrap-dist
# 
# Copyright (C) 2023-2024 Xavier Moffett <sapphirus@azorium.net>
# SPDX-License-Identifier: GPL-3.0-only
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

user() {
    local uid=$PACWRAP_REAL_UID
    local gid=$PACWRAP_REAL_GID

    if [[ "$(cat /etc/passwd | grep $uid:$gid)" ]]; then
        return
    fi


    echo "Creating dummy user.."
    echo "user:x:$uid:$gid::/:/usr/bin/nologin" >> /etc/passwd
    echo "user:x:$gid:" >> /etc/group
}

locale() {
    if [[ -f "/etc/locale.conf" ]]; then
        return
    fi

    echo "Initializing locales.."	

    if [[ $LANG == "en_US.UTF-8" ]] || [[ -z "$LANG" ]]; then
        echo -e "\nen_US.UTF-8 UTF-8" >> /etc/locale.gen
    else
        echo -e "\nen_US.UTF-8 UTF-8\n$LANG ${LANG#*.}" >> /etc/locale.gen
    fi

    echo "LANG=$LANG" > /etc/locale.conf
    locale-gen
}

timezone() {
    if [[ -f "/etc/localtime" ]]; then
        return
    fi

    echo "Setting localtime to UTC..."
    ln -s ../usr/share/zoneinfo/UCT /etc/localtime
}

dist() {
    locale
    timezone
    user
    echo "Distribution configuration completed."
}

pacman() {
    if [[ "$(cat /etc/pacman.conf | grep "#DownloadUser")" ]]; then
        return
    fi

    sed -i 's/DownloadUser =/#DownloadUser=/g;s/CheckSpace/#CheckSpace/g' /etc/pacman.conf
    if [[ $? == 0 ]]; then echo "Configured pacman.conf"; fi
}

cert_store() {
    chmod -R 755 /usr/share/ca-certificates /etc/ca-certificates

    if [[ $? == 0 ]]; then 
        echo "Applied permissions to certificate stores successfully."
    else
        echo "Error occurred whilst applying permissions to certificate stores."
    fi
}

case $1 in
    cert-store) cert_store;;
    config) dist;;
    pacman) pacman;;
    *) echo "error: Hook parameter '$1' not found.";;
esac

# vim:set ts=4 sw=4 et:1
